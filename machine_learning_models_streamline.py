# -*- coding: utf-8 -*-
"""Machine Learning Models - Streamline.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HozdSO55OYUUgWjqYcUf-l8sZRjcpXYu
"""
import streamlit as st
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix, classification_report
# Load data
def load_data():
    return pd.read_csv('/content/diabetes_binary_5050split_health_indicators_BRFSS2015.csv')

df = load_data()

# Split the data
X = df.drop('Diabetes_binary', axis=1)  # Features
y = df['Diabetes_binary']  # Target variable
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build and train the logistic regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# Evaluate the model
y_pred = model.predict(X_test)

# Display evaluation metrics
st.write('Confusion Matrix:')
st.write(confusion_matrix(y_test, y_pred))
st.write('Classification Report:')
st.write(classification_report(y_test, y_pred))

